{"version":3,"sources":["components/Pokemon/PokemonItem/pokemonItemsStyle.js","components/Pokemon/PokemonItem/pokemonItem.js","../node_modules/@material-ui/core/esm/Button/Button.js","components/Pokemon/ListPokemon/listPokemonStyle.js","components/Pokemon/ListPokemon/listPokemon.js","redux/actions/pokemonAction.js"],"names":["useStyles","makeStyles","theme","imgPokemon","backgroundColor","width","height","paddingTop","imgBgPokemon","containerPokemon","display","flexDirection","paddingBot","gifPokemon","avatar","paddingBottom","chip","borderColor","label","fontSize","color","fontWeight","PokemonItem","id","name","classes","useState","bgImg","setBgImg","setChip","className","Badge","overlap","anchorOrigin","vertical","horizontal","badgeContent","Avatar","alt","src","apiGif","onMouseOver","onMouseLeave","apiImgBackGround","apiImg","to","pathname","Chip","Typography","charAt","toUpperCase","slice","clickable","variant","Button","React","props","ref","children","_props$color","_props$component","component","_props$disabled","disabled","_props$disableElevati","disableElevation","_props$disableFocusRi","disableFocusRipple","endIconProp","endIcon","focusVisibleClassName","_props$fullWidth","fullWidth","_props$size","size","startIconProp","startIcon","_props$type","type","_props$variant","other","_objectWithoutProperties","clsx","concat","capitalize","ButtonBase","_extends","root","colorInherit","focusRipple","focusVisible","withStyles","typography","button","boxSizing","minWidth","padding","borderRadius","shape","palette","text","primary","transition","transitions","create","duration","short","textDecoration","fade","action","hoverOpacity","alignItems","justifyContent","textPrimary","main","textSecondary","secondary","outlined","border","disabledBackground","outlinedPrimary","outlinedSecondary","contained","getContrastText","grey","boxShadow","shadows","A100","containedPrimary","contrastText","dark","containedSecondary","textSizeSmall","pxToRem","textSizeLarge","outlinedSizeSmall","outlinedSizeLarge","containedSizeSmall","containedSizeLarge","sizeSmall","sizeLarge","marginRight","marginLeft","iconSizeSmall","iconSizeMedium","iconSizeLarge","containerBackGround","flexGrow","paper","borderWidth","connect","state","listPokemon","fetchApiListPokemon","url","dispatch","a","FETCH_DATA_POKEMON","fetchData","data","results","fetchedData","FETCH_DATA_POKEMON_COMPLETE","payload","console","log","loadMore","setLoadMore","useEffect","apiUrl","offset","length","Fragment","Container","Grid","container","justify","spacing","isLoading","map","pokemonItem","index","item","Paper","split","onClick"],"mappings":"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","file":"static/js/5.342fcf72.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    imgPokemon: {\r\n        backgroundColor: '#c4b8d6',\r\n        width: 170,\r\n        height: 170,\r\n        paddingTop: 10\r\n    },\r\n    imgBgPokemon: {\r\n        backgroundColor: '#c4b8d6',\r\n        width: 170,\r\n        height: 170,\r\n        paddingTop: 10\r\n    },\r\n    containerPokemon: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        paddingTop: 10,\r\n        paddingBot: 10,\r\n    },\r\n    gifPokemon: {\r\n        width: 40\r\n    },\r\n    avatar: {\r\n        paddingBottom: 10\r\n    },\r\n    chip: {\r\n        display: 'flex',\r\n        borderColor: 'black'\r\n    },\r\n    label: {\r\n        fontSize: 18,\r\n        color: 'black',\r\n        fontWeight: 'bold'\r\n    }\r\n}));\r\n","import React, { useState } from 'react';\r\nimport { Avatar, Badge, Chip, Typography } from '@material-ui/core';\r\nimport { apiImg, apiGif, apiImgBackGround } from '../../../constraints/index';\r\nimport { Link } from 'react-router-dom';\r\nimport { useStyles } from './pokemonItemsStyle';\r\n\r\nfunction PokemonItem({ id, name }) {\r\n    const classes = useStyles();\r\n    const [bgImg, setBgImg] = useState(false);\r\n    const [chip, setChip] = useState(false);\r\n    return (\r\n        <>\r\n            <div className={classes.containerPokemon}>\r\n                <Badge\r\n                    className={classes.avatar}\r\n                    overlap=\"circle\"\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    badgeContent={<Avatar alt=\"gif-pokemon\" src={`${apiGif}` + id + \".gif\"} />}\r\n                >\r\n                    <div onMouseOver={() => { setBgImg(true) }} onMouseLeave={() => { setBgImg(false) }}>\r\n                        {!bgImg ?\r\n                            <Avatar className={classes.imgPokemon} alt=\"img-pokemon\" src={`${apiImg}` + id + \".png\"} /> :\r\n                            <Avatar className={classes.imgBgPokemon} alt=\"img-pokemon\" src={`${apiImgBackGround}` + id + \".svg\"} />\r\n                        }\r\n                    </div>\r\n                </Badge>\r\n                <div onMouseOver={() => { setChip(true) }} onMouseLeave={() => { setChip(false) }}>\r\n                    <Link to={{pathname: '/pokemon/'+id+'/'+ name}}>\r\n                        <Chip\r\n                            className={classes.chip}\r\n                            label={<Typography className={classes.label}>#{id}-{name.charAt(0).toUpperCase() + name.slice(1)}</Typography>}\r\n                            clickable={true}\r\n                            variant={chip ? \"default\" : \"outlined\"}\r\n                            color=\"primary\"\r\n                        // component=\"a\"\r\n                        // href={`/pokemon/${id}/${name}`}\r\n                        />\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default (PokemonItem);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 15px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabledBackground)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(fade(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(fade(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        boxShadow: theme.shadows[4],\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          boxShadow: theme.shadows[2],\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none',\n      '&:hover': {\n        boxShadow: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: 'none'\n      },\n      '&:active': {\n        boxShadow: 'none'\n      },\n      '&$disabled': {\n        boxShadow: 'none'\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"text\"`. */\n    textSizeSmall: {\n      padding: '4px 5px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"text\"`. */\n    textSizeLarge: {\n      padding: '8px 11px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"outlined\"`. */\n    outlinedSizeSmall: {\n      padding: '3px 9px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"outlined\"`. */\n    outlinedSizeLarge: {\n      padding: '7px 21px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"contained\"`. */\n    containedSizeSmall: {\n      padding: '4px 10px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"contained\"`. */\n    containedSizeLarge: {\n      padding: '8px 22px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {},\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the startIcon element if supplied. */\n    startIcon: {\n      display: 'inherit',\n      marginRight: 8,\n      marginLeft: -4,\n      '&$iconSizeSmall': {\n        marginLeft: -2\n      }\n    },\n\n    /* Styles applied to the endIcon element if supplied. */\n    endIcon: {\n      display: 'inherit',\n      marginRight: -4,\n      marginLeft: 8,\n      '&$iconSizeSmall': {\n        marginRight: -2\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"small\"`. */\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"medium\"`. */\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 20\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"large\"`. */\n    iconSizeLarge: {\n      '& > *:first-child': {\n        fontSize: 22\n      }\n    }\n  };\n};\nvar Button = /*#__PURE__*/React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      endIconProp = props.endIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      startIconProp = props.startIcon,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"]);\n\n  var startIcon = startIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.startIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, startIconProp);\n  var endIcon = endIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.endIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, endIconProp);\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, classes[variant], className, color === 'inherit' ? classes.colorInherit : color !== 'default' && classes[\"\".concat(variant).concat(capitalize(color))], size !== 'medium' && [classes[\"\".concat(variant, \"Size\").concat(capitalize(size))], classes[\"size\".concat(capitalize(size))]], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, startIcon, children, endIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string]),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    containerBackGround: {\r\n        paddingTop: 10,\r\n        backgroundColor: '#ffff',\r\n        height: '100vh',\r\n        display: 'flex',        \r\n        flexDirection: 'column',\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#cfe8fc',\r\n        borderRadius: 10,\r\n        height: 235,\r\n        width: 235,\r\n        border: 'solid',\r\n        borderWidth: 3,\r\n    },\r\n    button: {\r\n        width: 200,\r\n        marginLeft:'auto',\r\n        marginRight:'auto',        \r\n    }\r\n}));","import React, { useEffect, useState } from 'react';\r\nimport { Container, Typography, Grid, Paper, Button } from '@material-ui/core';\r\nimport { apiUrl } from '../../../constraints/index';\r\nimport { fetchApiListPokemon } from '../../../redux/actions/pokemonAction';\r\nimport { connect } from 'react-redux';\r\nimport PokemonItem from '../PokemonItem/pokemonItem';\r\nimport { useStyles } from './listPokemonStyle';\r\n\r\nfunction ListPokemon({ listPokemon, fetchApiListPokemon }) {\r\n    const classes = useStyles();\r\n    const [loadMore, setLoadMore] = useState(false);\r\n    useEffect(() => {\r\n        let url = apiUrl + 'pokemon?limit=24&offset=0';\r\n        fetchApiListPokemon(url);\r\n    }, [fetchApiListPokemon]);\r\n    useEffect(() => {\r\n        if (loadMore && listPokemon.data) {\r\n            let offset = listPokemon.data.length;\r\n            let url = apiUrl + 'pokemon?limit=24&offset=' + offset;\r\n            setLoadMore(false);\r\n            fetchApiListPokemon(url);\r\n        }\r\n    }, [loadMore, listPokemon, fetchApiListPokemon])\r\n    return (\r\n        <React.Fragment>\r\n            <Container >\r\n                <Typography component=\"div\" className={classes.containerBackGround}>\r\n                    <Grid container justify=\"center\" spacing={5} >\r\n                        {listPokemon.data && !listPokemon.isLoading &&\r\n                            listPokemon.data.map((pokemonItem, index) => (\r\n                                <Grid key={index} item >\r\n                                    <Paper className={classes.paper}>\r\n                                        <PokemonItem id={pokemonItem.url.split('/')[6]} name={pokemonItem.name} />\r\n                                    </Paper>\r\n                                </Grid>\r\n                            ))}\r\n                    </Grid>\r\n                    <br />\r\n                    <Button onClick={() => { setLoadMore(loadMore => !loadMore) }} className={classes.button} variant=\"outlined\" color=\"primary\" >\r\n                        Load more ...\r\n                    </Button>\r\n                </Typography>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        listPokemon: state.listPokemon,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchApiListPokemon })(ListPokemon);","import {\r\n    FETCH_DATA_POKEMON, FETCH_DATA_POKEMON_COMPLETE,\r\n} from '../actionTypes/pokemonActionType';\r\nimport { fetchData } from '../../api/index';\r\n\r\nconst fetchDataListPokemon = () => {\r\n    return {\r\n        type: FETCH_DATA_POKEMON,\r\n    }\r\n}\r\n\r\nconst fetchDataListPokemonComplete = (fetchedData) => {\r\n    return {\r\n        type: FETCH_DATA_POKEMON_COMPLETE,\r\n        payload: { fetchedData }\r\n    }\r\n}\r\n\r\nexport const fetchApiListPokemon = (url) => async (dispatch) => {\r\n    try {\r\n        await dispatch(fetchDataListPokemon());\r\n        const data = await fetchData(url);\r\n        const { results } = data;\r\n        await dispatch(fetchDataListPokemonComplete(results));\r\n    }\r\n    catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\n"],"sourceRoot":""}