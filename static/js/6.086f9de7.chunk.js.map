{"version":3,"sources":["components/Pokemon/PokemonItem/pokemonItemsStyle.js","components/Pokemon/PokemonItem/pokemonItem.js","components/Pokemon/ListSearchedPokemon/listSearchedPokemonStyle.js","components/Pokemon/ListSearchedPokemon/listSearchedPokemon.js"],"names":["useStyles","makeStyles","theme","imgPokemon","backgroundColor","width","height","paddingTop","imgBgPokemon","containerPokemon","display","flexDirection","paddingBot","gifPokemon","avatar","paddingBottom","chip","borderColor","label","fontSize","color","fontWeight","PokemonItem","id","name","classes","useState","bgImg","setBgImg","setChip","className","Badge","overlap","anchorOrigin","vertical","horizontal","badgeContent","Avatar","alt","src","apiGif","onMouseOver","onMouseLeave","apiImgBackGround","apiImg","to","pathname","Chip","Typography","charAt","toUpperCase","slice","clickable","variant","containerBackGround","root","flexGrow","paper","justifyContent","borderRadius","border","borderWidth","connect","state","listSearchedPokemon","fetchApiSearchPokemon","params","useParams","searchBy","type","idType","useEffect","url","apiUrl","Fragment","Container","component","Grid","container","justify","spacing","isLoading","dataPokemon","pokemon_species","map","pokemonItem","index","item","Paper","split"],"mappings":"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","file":"static/js/6.086f9de7.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    imgPokemon: {\r\n        backgroundColor: '#c4b8d6',\r\n        width: 170,\r\n        height: 170,\r\n        paddingTop: 10\r\n    },\r\n    imgBgPokemon: {\r\n        backgroundColor: '#c4b8d6',\r\n        width: 170,\r\n        height: 170,\r\n        paddingTop: 10\r\n    },\r\n    containerPokemon: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        paddingTop: 10,\r\n        paddingBot: 10,\r\n    },\r\n    gifPokemon: {\r\n        width: 40\r\n    },\r\n    avatar: {\r\n        paddingBottom: 10\r\n    },\r\n    chip: {\r\n        display: 'flex',\r\n        borderColor: 'black'\r\n    },\r\n    label: {\r\n        fontSize: 18,\r\n        color: 'black',\r\n        fontWeight: 'bold'\r\n    }\r\n}));\r\n","import React, { useState } from 'react';\r\nimport { Avatar, Badge, Chip, Typography } from '@material-ui/core';\r\nimport { apiImg, apiGif, apiImgBackGround } from '../../../constraints/index';\r\nimport { Link } from 'react-router-dom';\r\nimport { useStyles } from './pokemonItemsStyle';\r\n\r\nfunction PokemonItem({ id, name }) {\r\n    const classes = useStyles();\r\n    const [bgImg, setBgImg] = useState(false);\r\n    const [chip, setChip] = useState(false);\r\n    return (\r\n        <>\r\n            <div className={classes.containerPokemon}>\r\n                <Badge\r\n                    className={classes.avatar}\r\n                    overlap=\"circle\"\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    badgeContent={<Avatar alt=\"gif-pokemon\" src={`${apiGif}` + id + \".gif\"} />}\r\n                >\r\n                    <div onMouseOver={() => { setBgImg(true) }} onMouseLeave={() => { setBgImg(false) }}>\r\n                        {!bgImg ?\r\n                            <Avatar className={classes.imgPokemon} alt=\"img-pokemon\" src={`${apiImg}` + id + \".png\"} /> :\r\n                            <Avatar className={classes.imgBgPokemon} alt=\"img-pokemon\" src={`${apiImgBackGround}` + id + \".svg\"} />\r\n                        }\r\n                    </div>\r\n                </Badge>\r\n                <div onMouseOver={() => { setChip(true) }} onMouseLeave={() => { setChip(false) }}>\r\n                    <Link to={{pathname: '/pokemon/'+id+'/'+ name}}>\r\n                        <Chip\r\n                            className={classes.chip}\r\n                            label={<Typography className={classes.label}>#{id}-{name.charAt(0).toUpperCase() + name.slice(1)}</Typography>}\r\n                            clickable={true}\r\n                            variant={chip ? \"default\" : \"outlined\"}\r\n                            color=\"primary\"\r\n                        // component=\"a\"\r\n                        // href={`/pokemon/${id}/${name}`}\r\n                        />\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default (PokemonItem);","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    containerBackGround: {\r\n        paddingTop: 10,\r\n        backgroundColor: '#ffff',\r\n        height: '100vh'\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#cfe8fc',\r\n        borderRadius: 10,\r\n        height: 235,\r\n        width: 235,\r\n        border: 'solid',\r\n        borderWidth: 3,\r\n    },\r\n}));","import React, { useEffect } from 'react';\r\nimport { Container, Typography, Grid, Paper } from '@material-ui/core';\r\nimport { apiUrl } from '../../../constraints/index';\r\nimport { fetchApiSearchPokemon } from '../../../redux/actions/searchPokemonAction';\r\nimport { connect } from 'react-redux';\r\nimport PokemonItem from '../PokemonItem/pokemonItem';\r\nimport { useStyles } from './listSearchedPokemonStyle';\r\nimport { useParams } from 'react-router';\r\n\r\nfunction ListSearchedPokemon({ listSearchedPokemon, fetchApiSearchPokemon }) {\r\n    const classes = useStyles();\r\n    const params = useParams();\r\n    const searchBy = params.type + '_' + params.idType\r\n    useEffect(() => {\r\n        let url = apiUrl + `${params.type}/${params.idType}`;\r\n        fetchApiSearchPokemon(url, searchBy);\r\n    }, [fetchApiSearchPokemon, params, searchBy]);\r\n    return (\r\n        <React.Fragment>\r\n            <Container >\r\n                <Typography component=\"div\" className={classes.containerBackGround}>\r\n                    <Grid container justify=\"center\" spacing={5} >\r\n                        {listSearchedPokemon[searchBy] && !listSearchedPokemon[searchBy].isLoading &&\r\n                            listSearchedPokemon[searchBy].dataPokemon.pokemon_species.map((pokemonItem, index) => (\r\n                                <Grid key={index} item >\r\n                                    <Paper className={classes.paper}>\r\n                                        <PokemonItem id={pokemonItem.url.split('/')[6]} name={pokemonItem.name} />\r\n                                    </Paper>\r\n                                </Grid>\r\n                            ))}\r\n                    </Grid>\r\n                </Typography>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        listSearchedPokemon: state.listSearchedPokemon,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchApiSearchPokemon })(ListSearchedPokemon);"],"sourceRoot":""}